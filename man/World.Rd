% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/World.R
\name{World}
\alias{World}
\title{World2 class}
\format{\link[R6:R6Class]{R6::R6Class} object inheriting from \link[dymiumCore:Entity]{dymiumCore::Entity}}
\description{
World is used to store other Entities. Think of it as a container that is to be
passed into event functions and let each event function uses data that it is storing.
}
\section{Construction}{
\preformatted{x <- World2$new()
}
\itemize{
\item NULL\cr
}
}

\section{Public Fields}{

\itemize{
\item \code{config}\cr
Contains the config file that was used to create the instance, if there is any.
\item \code{Cont}\cr
Contains the objects those were added using \code{self$add(...)}.
\item \code{Containers}\cr
Contains the \link{Container}, and its inheritences, objects those were added using \code{self$add(...)}.
\item \code{Entities}\cr
Contains the \link{Entity}, and its inheritences, objects those were added using \code{self$add(...)}.
\item \code{Models}\cr
Contains the \link{Model} objects those were added using \code{self$add(...)}.
\item \code{info}\cr
Contains information about the World object such as dymium's version it was
created with, its built date, creator info, R version, etc.
}
}

\section{Public Methods}{

\itemize{
\item \code{add(x, name)}\cr
(\link[dymiumCore:Entity]{dymiumCore::Entity} and inheritances | \link[dymiumCore:Container]{dymiumCore::Container} | an object of the classes in
\link[dymiumCore:SupportedTransitionModels]{dymiumCore::SupportedTransitionModels})\cr
Add an object the allowed types to \code{self$Cont}, \code{self$Entities}, \code{self$Containers},
\code{self$Models}. Only one instance of each class are allowed to be stored.
The stored instances can be access via \verb{self$<object-type>} or \code{self$get(x)}
\item \code{remove(x)}\cr
(\code{character(1)} | \code{integer(1)})\cr
Remove an object in element or named \code{x}.
\item \code{get_entity(x)}\cr
(\code{character(1)})\cr
Get a reference to the \code{x} Entity object.
\item \code{get_model(x)}\cr
(\code{character(1)})\cr
Get a model object by name \code{x}.
\item \code{get_time()}\cr
Get the value of .DMevn$sim_time.
\item \code{get_info()}\cr
\code{NULL} -> \code{list()}\cr
Get information about the creation of the world object.
Dymium's version, dependencies, R version etc.
\item \code{set_time(x)}\cr
(\code{integer(1)}) -> \code{NULL}\cr
Set the value of .DMevn$sim_time.
\item \code{reset_time()}\cr
Reset the value of .DMevn$sim_time to 0L (L is for forcing type integer
otherwise 0 is of numeric type).
\item \code{start_iter(time_step, unit)}\cr
(\code{integer(1)}, \code{character(1)}) -> \code{self}\cr
}
}

