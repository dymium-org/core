% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Agent.R
\name{Agent}
\alias{Agent}
\title{Agent}
\format{\link[R6:R6Class]{R6::R6Class} object.}
\description{
Agent class is the generic class for creating urban agents such
as individuals, households, firms, dwelling and more.
}
\section{Construction}{
\preformatted{Agt <- Agent$new(...)
}

During initialisation, \link{History} object is created.
}

\section{Fields}{

\itemize{
\item \code{history}\cr
\item \code{data}::\code{data.table::data.table()}\cr
Contains the attributes of agent. One of the attributes must be a unique id field
}
}

\section{Methods}{

\itemize{
\item \strong{DEPRECATING} \code{initialise_data(data, id_col)}\cr
(\code{\link[data.table:data.table]{data.table::data.table()}}, \code{character(1)}) -> \code{NULL}\cr
Store data to data while making sure that \code{data} meets all the
requirements. \code{data}, which is also the first set of data for the agent object,
will be stored at the first index in \code{private$.data}, a named list of data objects, and named
as \code{attrs}.
\item \code{add_new_agents(parent_ids = NULL, data = NULL)}\cr
(\code{integer()}|\code{character()}, \code{\link[data.table:data.table]{data.table::data.table()}}) -> \code{NULL}\cr
Adds new agent records to data.
\item \code{get_latest_agent_id(ids)}\cr
(\code{integer()}) -> \code{integer()}\cr
Return the id of the last agent that was created.
\item \code{get_new_agent_ids()}\cr
() -> \code{integer()}\cr
Return the ids of new agents.
\item \code{is_alive(ids)}\cr
(\code{integer()}) -> \code{logical()}\cr
Check if the agents with id in \code{ids} are still alive/active in its data object.
or not.
\item \code{generate_new_ids(n)}\cr
(\code{integer(1)}) -> \code{integer()}\cr
Generates \code{n} number of new ids.
\item \code{subset_ids(expression)}\cr
(\code{expression}) -> \verb{[data.table::data.table()]}\cr
Return ids of rows matches the expression.
}
}

\section{Super classes}{
\code{\link[dymiumCore:Generic]{dymiumCore::Generic}} -> \code{\link[dymiumCore:Entity]{dymiumCore::Entity}} -> \code{Agent}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Agent$new()}}
\item \href{#method-initialise_data}{\code{Agent$initialise_data()}}
\item \href{#method-add_new_agents}{\code{Agent$add_new_agents()}}
\item \href{#method-subset_ids}{\code{Agent$subset_ids()}}
\item \href{#method-get_latest_agent_id}{\code{Agent$get_latest_agent_id()}}
\item \href{#method-get_new_agent_ids}{\code{Agent$get_new_agent_ids()}}
\item \href{#method-is_alive}{\code{Agent$is_alive()}}
\item \href{#method-clone}{\code{Agent$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="class">}\href{../../dymiumCore/html/Generic.html#method-class}{\code{dymiumCore::Generic$class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="debug">}\href{../../dymiumCore/html/Generic.html#method-debug}{\code{dymiumCore::Generic$debug()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="is_dymium_class">}\href{../../dymiumCore/html/Generic.html#method-is_dymium_class}{\code{dymiumCore::Generic$is_dymium_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="message">}\href{../../dymiumCore/html/Generic.html#method-message}{\code{dymiumCore::Generic$message()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_debug">}\href{../../dymiumCore/html/Generic.html#method-msg_debug}{\code{dymiumCore::Generic$msg_debug()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_info">}\href{../../dymiumCore/html/Generic.html#method-msg_info}{\code{dymiumCore::Generic$msg_info()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_trace">}\href{../../dymiumCore/html/Generic.html#method-msg_trace}{\code{dymiumCore::Generic$msg_trace()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_warn">}\href{../../dymiumCore/html/Generic.html#method-msg_warn}{\code{dymiumCore::Generic$msg_warn()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="add_data">}\href{../../dymiumCore/html/Entity.html#method-add_data}{\code{dymiumCore::Entity$add_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="check_ids">}\href{../../dymiumCore/html/Entity.html#method-check_ids}{\code{dymiumCore::Entity$check_ids()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="data">}\href{../../dymiumCore/html/Entity.html#method-data}{\code{dymiumCore::Entity$data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="generate_new_ids">}\href{../../dymiumCore/html/Entity.html#method-generate_new_ids}{\code{dymiumCore::Entity$generate_new_ids()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_attr">}\href{../../dymiumCore/html/Entity.html#method-get_attr}{\code{dymiumCore::Entity$get_attr()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_data">}\href{../../dymiumCore/html/Entity.html#method-get_data}{\code{dymiumCore::Entity$get_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_data_names">}\href{../../dymiumCore/html/Entity.html#method-get_data_names}{\code{dymiumCore::Entity$get_data_names()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_id_col">}\href{../../dymiumCore/html/Entity.html#method-get_id_col}{\code{dymiumCore::Entity$get_id_col()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_ids">}\href{../../dymiumCore/html/Entity.html#method-get_ids}{\code{dymiumCore::Entity$get_ids()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_idx">}\href{../../dymiumCore/html/Entity.html#method-get_idx}{\code{dymiumCore::Entity$get_idx()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_last_id">}\href{../../dymiumCore/html/Entity.html#method-get_last_id}{\code{dymiumCore::Entity$get_last_id()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_new_ids">}\href{../../dymiumCore/html/Entity.html#method-get_new_ids}{\code{dymiumCore::Entity$get_new_ids()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="get_removed_data">}\href{../../dymiumCore/html/Entity.html#method-get_removed_data}{\code{dymiumCore::Entity$get_removed_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="has_attr">}\href{../../dymiumCore/html/Entity.html#method-has_attr}{\code{dymiumCore::Entity$has_attr()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="ids_exist">}\href{../../dymiumCore/html/Entity.html#method-ids_exist}{\code{dymiumCore::Entity$ids_exist()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="idx_exist">}\href{../../dymiumCore/html/Entity.html#method-idx_exist}{\code{dymiumCore::Entity$idx_exist()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="n">}\href{../../dymiumCore/html/Entity.html#method-n}{\code{dymiumCore::Entity$n()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="print">}\href{../../dymiumCore/html/Entity.html#method-print}{\code{dymiumCore::Entity$print()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="print_data">}\href{../../dymiumCore/html/Entity.html#method-print_data}{\code{dymiumCore::Entity$print_data()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="remove">}\href{../../dymiumCore/html/Entity.html#method-remove}{\code{dymiumCore::Entity$remove()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Entity" data-id="summary">}\href{../../dymiumCore/html/Entity.html#method-summary}{\code{dymiumCore::Entity$summary()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$new(.data, id_col)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-initialise_data"></a>}}
\subsection{Method \code{initialise_data()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$initialise_data(.data, id_col)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-add_new_agents"></a>}}
\subsection{Method \code{add_new_agents()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$add_new_agents(parent_ids, .data)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-subset_ids"></a>}}
\subsection{Method \code{subset_ids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$subset_ids(expr)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_latest_agent_id"></a>}}
\subsection{Method \code{get_latest_agent_id()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$get_latest_agent_id()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_new_agent_ids"></a>}}
\subsection{Method \code{get_new_agent_ids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$get_new_agent_ids()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-is_alive"></a>}}
\subsection{Method \code{is_alive()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$is_alive(ids)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Agent$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
