% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Transition.R
\name{Transition}
\alias{Transition}
\title{Transition class}
\description{
A class that perform Monte Carlo simulation on agents using a probabilistic model.
Work flow: \code{initialise()} -> \code{filter()} -> \code{mutate()} -> \code{simulate()} -> \code{postprocess()}.
Note that, the order of filter and mutate can be swap by overwriting the \code{preprocess()} method.
The default order as speficied in the \code{preprocess} method is:\if{html}{\out{<div class="r">}}\preformatted{filter(.data) \%>\%
 mutate(.)
}\if{html}{\out{</div>}}
}
\section{Construction}{
\preformatted{Transition$new(x, model, target = NULL, targeted_agents = NULL)
}
\itemize{
\item \code{x} :: \code{\link{R6}}\cr
A Agent class inheritance object.
\item \code{model} :: \code{object}\cr
A model
\item \code{target} :: \code{\link[=integer]{integer()}}\cr
(Default as NULL). A number that forces the number of micro events to occur. For example, if
`10`` is speficied, there will be 10 agents that under go the event. However,
if a integer vector is given it must be the same length as the classes in the model.
This only works for classification models.
\item \code{targeted_agent} :: \code{\link[=integer]{integer()}}\cr
(Default as NULL) A integer vectors that contains ids of agents in \code{x} to undergo the event.
}
}

\section{Fields}{

\itemize{
\item \code{NULL}\cr
}
}

\section{Methods}{

\itemize{
\item \code{filter(.data)}\cr
(\code{\link[data.table:data.table]{data.table::data.table()}}) -> \verb{[data.table::data.table()]}\cr
\strong{(By default, first of the preprocessing steps)}\cr
By default this method returns the input \code{.data}. This method can be overwrite
to give the user the flexibility to 'filter' the data prior to making prediction
by the given model. Filtering for eligible agents for this transition can be done in this step.
\item \code{mutate(.data)}\cr
(\code{\link[data.table:data.table]{data.table::data.table()}}) -> \verb{[data.table::data.table()]}\cr
\strong{(By default, second of the preprocessing steps)}\cr
By default this method returns the input \code{.data}. This method can be overwrite
to give the user the flexibility to 'mutate' the data prior to making prediction
by the given model. Adding derived variables and historical life course of the agents
can be done in this step.
\item \code{preprocess(.data)}\cr
(\code{\link[data.table:data.table]{data.table::data.table()}}) -> \verb{[data.table::data.table()]}\cr
By default, preprocess runs \code{filter()} then \code{mutate()} as described in the description section.
This can be overwritten to change the order and add extra steps.
\item \code{update_agents(attr)}\cr
(\code{character(1)})\cr
Update the attribute data of the agents that undergo the transition event.
\item \code{get_result(ids)}\cr
(\code{integer()}) -> \link[data.table:data.table]{data.table::data.table}\cr
Returns the simulation result in a \link[data.table:data.table]{data.table::data.table} format with two
columns \code{id} and \code{response}.
\item \code{get_nrow_result()}\cr
Returns the number of rows in the simulation result.
\item \code{get_decision_maker_ids(response_filter = NULL)}\cr
(\code{character()}) -> (\code{integer()})\cr
Returns ids of the agents that have their response equal to \code{response_filter}.
}
}

\section{Super class}{
\code{\link[dymiumCore:Generic]{dymiumCore::Generic}} -> \code{Transition}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{Transition$new()}}
\item \href{#method-get_decision_maker_ids}{\code{Transition$get_decision_maker_ids()}}
\item \href{#method-get_data}{\code{Transition$get_data()}}
\item \href{#method-get_result}{\code{Transition$get_result()}}
\item \href{#method-get_nrow_result}{\code{Transition$get_nrow_result()}}
\item \href{#method-filter}{\code{Transition$filter()}}
\item \href{#method-mutate}{\code{Transition$mutate()}}
\item \href{#method-preprocess}{\code{Transition$preprocess()}}
\item \href{#method-postprocess}{\code{Transition$postprocess()}}
\item \href{#method-update_agents}{\code{Transition$update_agents()}}
\item \href{#method-print}{\code{Transition$print()}}
\item \href{#method-clone}{\code{Transition$clone()}}
}
}
\if{html}{
\out{<details ><summary>Inherited methods</summary>}
\itemize{
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="class">}\href{../../dymiumCore/html/Generic.html#method-class}{\code{dymiumCore::Generic$class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="debug">}\href{../../dymiumCore/html/Generic.html#method-debug}{\code{dymiumCore::Generic$debug()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="is_dymium_class">}\href{../../dymiumCore/html/Generic.html#method-is_dymium_class}{\code{dymiumCore::Generic$is_dymium_class()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="message">}\href{../../dymiumCore/html/Generic.html#method-message}{\code{dymiumCore::Generic$message()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_debug">}\href{../../dymiumCore/html/Generic.html#method-msg_debug}{\code{dymiumCore::Generic$msg_debug()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_info">}\href{../../dymiumCore/html/Generic.html#method-msg_info}{\code{dymiumCore::Generic$msg_info()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_trace">}\href{../../dymiumCore/html/Generic.html#method-msg_trace}{\code{dymiumCore::Generic$msg_trace()}}\out{</span>}
\item \out{<span class="pkg-link" data-pkg="dymiumCore" data-topic="Generic" data-id="msg_warn">}\href{../../dymiumCore/html/Generic.html#method-msg_warn}{\code{dymiumCore::Generic$msg_warn()}}\out{</span>}
}
\out{</details>}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$new(x, model, target = NULL, targeted_agents = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{a Agent class inheritance object}

\item{\code{model}}{a model object}

\item{\code{target}}{a integer}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_decision_maker_ids"></a>}}
\subsection{Method \code{get_decision_maker_ids()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$get_decision_maker_ids(response_filter = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_data"></a>}}
\subsection{Method \code{get_data()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$get_data()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_result"></a>}}
\subsection{Method \code{get_result()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$get_result(ids)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_nrow_result"></a>}}
\subsection{Method \code{get_nrow_result()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$get_nrow_result()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-filter"></a>}}
\subsection{Method \code{filter()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$filter(.data)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-mutate"></a>}}
\subsection{Method \code{mutate()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$mutate(.data)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-preprocess"></a>}}
\subsection{Method \code{preprocess()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$preprocess(.data)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-postprocess"></a>}}
\subsection{Method \code{postprocess()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$postprocess(.data)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-update_agents"></a>}}
\subsection{Method \code{update_agents()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$update_agents(attr)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{attr}}{the column name in agents' attribute data to be updated using the
response result from the transition event.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Update the attribute data of the agents that undergo the transition event.
}

\subsection{Returns}{
NULL
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{Transition$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
