% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DataBackendSpatialFeature.R
\name{DataBackendSpatialFeature}
\alias{DataBackendSpatialFeature}
\title{sf::sf as data backend}
\format{
\link[R6:R6Class]{R6::R6Class} object inheriting from \link{DataBackendDataTable}<-\link{DataBackendDataFrame}<-\link{DataBackend}.
}
\description{
For storing spatial data. The data is stored as a data.table but has methods
to transform the object back to its intiail sf format.
}
\note{
This class could be furthur improved by using a data.table to store non-spatial
information of the data object and another just to store the spatial features. Both
objects are linkable through a id column. To make sure both spatial and non-spatial
information always match we can invoke a consistency check between the two everytime
the user or its methods try to access private$.data.
}
\section{Construction}{
\preformatted{x <- DataBackendSpatialFeature$new(data)
}
\itemize{
\item \code{data} :: \link[sf:sf]{sf::sf}\cr
The input must be an object of class \link[sf:sf]{sf::sf} (Simple feature) from the sf package.
\item \code{key} :: \code{NULL}|\code{character(1)}\cr
The key of \code{.data}.
}
}

\section{Fields}{

\itemize{
\item \code{NULL}\cr
}
}

\section{Public Methods}{

\itemize{
\item \code{add(.data)}\cr
(a \link[sf:sf]{sf::sf} data.frame) -> \code{NULL}\cr
Add data.
\item \code{get_sf()}\cr
Get data as an \link[sf:sf]{sf::sf} object.
}
}

