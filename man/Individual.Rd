% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Individual.R
\name{Individual}
\alias{Individual}
\title{Individual class}
\format{\link[R6:R6Class]{R6::R6Class} object inheriting from \link{Agent}<-\link{Entity}.}
\description{
Create Individual class, extended Agent class.
}
\section{Construction}{
\preformatted{Ind <- Individual$new(.data, id_col, hid_col)
}
\itemize{
\item \code{.data}::\link[data.table:data.table]{data.table::data.table}\cr
Microdata of Individuals.
\item \code{id_col}::\code{character()}\cr
Names of the primary id colum and relation id colunns in \code{.data}
\item \code{hid_col}::\code{character(1)}\cr
Name of the id colum in \code{.data}
}
}

\section{Public Fields}{

\itemize{
\item NULL\cr
}
}

\section{Public Methods}{


Inherits all fields and methods of \link{Agent}.
\itemize{
\item \code{get_father(ids)}\cr
(\code{integer()}) -> \code{integer()}\cr
Get father ids of the corresponding individual ids.
\item \code{get_mother(ids)}\cr
(\code{integer()}) -> \code{integer()}\cr
Get mother ids of the corresponding individual ids.
\item \code{get_partner(ids)}\cr
(\code{integer()}) -> \code{integer()}\cr
Get partner ids of the corresponding individual ids.
\item \code{get_children(ids)}\cr
(\code{integer()}) -> \code{list()}\cr
Returns a list of children that has the same length as \code{ids}. NAs are returned
where individual agents have no children. Please note that only the number of children
that are alive will be returned. To get the number of children an individual ever have
during the simulation you may need to implement a function that look at the historical
records of the individual to determine that.
\item \code{get_n_children(ids)}\cr
(\code{integer()}) -> \code{integer()}\cr
Returns the number of children each individual agent in the given ids has.
\item \code{get_n_resident_children(ids)}\cr
(\code{integer()}) -> \code{integer()}\cr
Returns the number of children that live in the same household as the individuals
in \code{ids}.
\item \code{living_together}\cr
(\code{integer()}, \code{inteter()}) -> \code{logical()}\cr
For checking if two agents are residing in the same household. If either of
the ids is NA the function will return NA for those indexes.
\item \code{get_household_ids(ids)}\cr
(\code{integer()}) -> \code{integer()}\cr
Returns household ids of the individual in \code{ids} arg.
\item \code{get_ids_in_hids(hids = NULL)}\cr -
(\code{integer()}) -> \code{integer()}\cr
Returns individual ids matches the input \code{hids}.
\item \code{get_hid_col()}\cr
() -> \code{character(1)}\cr
Returns household id or \code{hid} of the individual-object.
\item \code{add_relationship(ids, target_ids, type)}\cr
(\code{integer()}, \code{integer()}, \code{'father'|'mother'|'partner'})\cr
Adds \code{target_ids} to the relationship column in \code{type} of the individual
agents in \code{ids}. Note that, if \code{type} is 'partner' then both agents with id in
\code{ids} and \code{target_ids} will add each other as 'partner'. Hence, no need for
you to call this function twice to assign partner relationship to all the couples.
\item \code{remove_relationship(ids, type = "partner")}\cr
(\code{integer()}, \code{'partner'})\cr
Note that, children and parents can't be removed. Only partner relationship can be removed.
\item \code{have_relationship(ids = NULL, type)}\cr
(\code{integer()}, \code{character(1)}) -> \code{logical()}\cr
Check if individuals in \code{ids} have the relationship of type \code{type}.
\item \code{remove_household_id(ids)}\cr
(\code{integer()})\cr
Remove household ids of individuals in \code{ids}.
\item \code{add_household_id(ids, hh_ids)}\cr
(\code{integer()}, \code{integer()})\cr
Replace household ids of individuals in \code{ids}. \code{ids} and \code{hh_ids} must be
of the same length.
\item \code{get_parent_hid(ids = NULL)}\cr
(\code{integer()}) -> \code{\link[data.table:data.table]{data.table::data.table()}}\cr
Returns a data.table with three columns: pid, father_hid and mother_hid.
\item \code{living_together(self_ids, target_ids)}\cr
(\code{integer()}, \code{integer()}) -> \code{logical()}\cr
Check if two individuals are living together in the same household. Returns
logical vector.
\item \code{have_resident_child(ids = NULL)}\cr
(\code{integer()}) -> \code{logical()}\cr
Returns a logical of length \code{ids} if ids is not NULL else the length will be
equal to the number of rows of the data. Resident children are those children
who are living in the same household as their parents.
\item \code{get_ids_from_id_cols(id_cols = NULL, na.rm = TRUE)}\cr
(\code{character()}, \code{logical(1)}) -> \code{character()}\cr
Returns all unique ids in id_cols in a vector, excluding household ids.
}
}

