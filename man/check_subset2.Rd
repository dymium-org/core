% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkmate.R
\name{check_subset2}
\alias{check_subset2}
\alias{assert_subset2}
\alias{test_subset2}
\alias{expect_subset2}
\title{Check subset2}
\usage{
check_subset2(x, choices, empty.ok = TRUE, fmatch = FALSE)

assert_subset2(
  x,
  choices,
  empty.ok = TRUE,
  fmatch = FALSE,
  .var.name = checkmate::vname(x),
  add = NULL
)

test_subset2(x, choices, empty.ok = TRUE, fmatch = FALSE)

expect_subset2(
  x,
  choices,
  empty.ok = TRUE,
  fmatch = FALSE,
  info = NULL,
  label = vname(x)
)
}
\arguments{
\item{x}{[any]\cr
Object to check.}

\item{choices}{[\code{atomic}]\cr
Set of possible values. May be empty.}

\item{empty.ok}{[\code{logical(1)}]\cr
Treat zero-length \code{x} as subset of any set \code{choices} (this includes \code{NULL})?
Default is \code{TRUE}.}

\item{fmatch}{[\code{logical(1)}]\cr
Use the set operations implemented in \code{\link[fastmatch]{fmatch}} in package \pkg{fastmatch}.
If \pkg{fastmatch} is not installed, this silently falls back to \code{\link[base]{match}}.
\code{\link[fastmatch]{fmatch}} modifies \code{y} by reference:
A hash table is added as attribute which is used in subsequent calls.}

\item{.var.name}{[\code{character(1)}]\cr
Name of the checked object to print in assertions. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}

\item{add}{\link[checkmate:AssertCollection]{checkmate::AssertCollection}\cr
Collection to store assertions. See \link[checkmate:AssertCollection]{checkmate::AssertCollection}.}

\item{info}{[character(1)]\cr
Extra information to be included in the message for the testthat reporter.
See \code{\link[testthat]{expect_that}}.}

\item{label}{[\code{character(1)}]\cr
Name of the checked object to print in messages. Defaults to
the heuristic implemented in \code{\link[checkmate]{vname}}.}
}
\value{
(\code{logical(1)}).
}
\description{
The only different from \code{checkmate::checkSubset} is that this only print
mismatches in \code{x}.
}
