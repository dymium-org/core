% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Container.R
\name{Container}
\alias{Container}
\title{Container}
\format{\link[R6:R6Class]{R6::R6Class} object inheriting from \link[dymiumCore:ContainerGeneric]{dymiumCore::ContainerGeneric}}
\description{
Container is the base class for \link{World} and \link{Population}. It has the basic
functionalities to store and access references of other \link[R6:R6Class]{R6::R6Class} objects.
}
\section{Construction}{
\preformatted{x <- Container$new()
}
\itemize{
\item NULL\cr
}
}

\section{Public Fields}{

\itemize{
\item \code{Cont}\cr
A named list that contains references of other \link[R6:R6Class]{R6::R6Class} objects.
}
}

\section{Public Methods}{

\itemize{
\item \code{add(x, name)}\cr
(\link[R6:R6Class]{R6::R6Class}|Supported Transition Models)\cr
Add an \link[R6:R6Class]{R6::R6Class} object or a object of the classes in \link[dymiumCore:SupportedTransitionModels]{dymiumCore::SupportedTransitionModels} to self$Cont.
Name must be given when \code{x} is an object of the classes in \link[dymiumCore:SupportedTransitionModels]{dymiumCore::SupportedTransitionModels}.
\item \code{check_pos(x)}\cr
(\code{integer(1)}) -> (\code{logical(1)})\cr
Check if the position in \code{x} exists in \code{self$Cont}.
\item \code{get(x)}\cr
(\code{character(1)} | \code{integer(1)} | an \link[R6:R6Class]{R6::R6Class} generator) -> (an \link[R6:R6Class]{R6::R6Class} object)\cr
Get a reference to \code{x} which can be a \link[R6:R6Class]{R6::R6Class} generator or string or integer.
\item \code{n()}\cr
() -> (\code{integer(1)})\cr
Returns the length of the references in \code{self$Cont}.
\item \code{names()}\cr
() -> (\code{character()})\cr
Returns the names of the references in \code{self$Cont}.
\item \code{print()}\cr
\item \code{remove(x)}\cr
(\code{character(1)} | \code{integer(1)} | a \link[R6:R6Class]{R6::R6Class} generator)\cr
Remove the reference of x from self$Cont by the class of the given \link[R6:R6Class]{R6::R6Class}
generator or string or integer.
\item \code{unpack(target)}\cr
(\link[dymiumCore:Container]{dymiumCore::Container})\cr
Add all the references inside self$Cont to the \code{target} container. This is
useful when you have containers within a container so that all references can
be access via the top container. eg: A World container that contains a Population
container can directly access Individual and Household objects.
\item \code{summary()}\cr
Abstract method.
}
}

