% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checkmate.R
\name{check_target}
\alias{check_target}
\alias{assert_target}
\alias{test_target}
\alias{expect_target}
\title{Check if argument is a valid target object}
\usage{
check_target(x, null.ok = TRUE)

assert_target(x, null.ok = TRUE, .var.name = checkmate::vname(x), add = NULL)

test_target(x, null.ok = TRUE)

expect_target(x, null.ok = TRUE, info = NULL, label = vname(x))
}
\arguments{
\item{x}{any object to check}

\item{null.ok}{default as TRUE}

\item{.var.name}{[\code{character(1)}]\cr
The custom name for \code{x} as passed to any \code{assert*} function.
Defaults to a heuristic name lookup.}

\item{add}{\link[checkmate:AssertCollection]{checkmate::AssertCollection}\cr
Collection to store assertions. See \link[checkmate:AssertCollection]{checkmate::AssertCollection}.}

\item{info}{[\code{character(1)}]\cr
See \code{\link[testthat]{expect_that}}}

\item{label}{[\code{character(1)}]\cr
See \code{\link[testthat]{expect_that}}}
}
\value{
TRUE if \code{x} is a valid target object else throws an error.
}
\description{
A target object is either a named list that contains integer values (static target) or a
data.frame that contains a 'time' column and other response columns (dynamic target). The type of
of the target depends on its usage.
}
\details{
Here is an example of a static target \code{list(yes=10, no=20)}. Here is an example
of a dynamic target \verb{data.frame(time = c(1,2,3), yes = c(10,11,12), no = c(20,21,22)}.
}
