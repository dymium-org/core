% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/module.R
\name{download_module}
\alias{download_module}
\title{Download a module from a repository.}
\usage{
download_module(
  name,
  repo = dymiumModulesRepo,
  version,
  force = FALSE,
  remove_download = FALSE,
  .basedir = here::here()
)
}
\arguments{
\item{name}{name of the module.}

\item{repo}{A GitHub repository to look for modules. By default, this uses 'dymium-org/dymiumModules'.}

\item{version}{the version of the module to download. If not given, the latest version will
be downloaded.}

\item{force}{A logical value. force download even though the module already exists locally.}

\item{remove_download}{a logical value whether to delete the downloaded zip file or not.}

\item{.basedir}{:: \code{character(1)}\cr
The base directory that the downloaded module will be saved at. \code{\link[here:here]{here::here()}} is
used to provide the default value which is is the root folder of the active RStudio project.}
}
\value{
path to the module.
}
\description{
Download and extract a module to the 'modules' folder in the active working directory.
If you are using an RStudio project then it will be saved in the 'modules' folder
of your project. If the 'modules' folder does not exist, it will be created.
}
\examples{
\dontrun{
# download an test module.
download_modules("test", version = "0.0.1")
}

}
