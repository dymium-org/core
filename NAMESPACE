# Generated by roxygen2: do not edit by hand

S3method(add_log,Container)
S3method(add_log,Entity)
S3method(add_log,World)
S3method(extract_data,DataBackendDataFrame)
S3method(extract_data,Entity)
S3method(extract_data,World)
S3method(get_history,Container)
S3method(get_history,Entity)
S3method(get_log,Container)
S3method(get_log,Generic)
S3method(get_log,World)
S3method(simulate_choice,data.frame)
S3method(simulate_choice,glm)
S3method(simulate_choice,train)
S3method(summary,Model)
export("%>%")
export(.get_sim_time)
export(Agent)
export(Asset)
export(Building)
export(BuildingCommercial)
export(BuildingIndustrial)
export(BuildingResidential)
export(Container)
export(ContainerGeneric)
export(DataBackend)
export(DataBackendDataFrame)
export(DataBackendDataTable)
export(DataBackendSpatialFeature)
export(Entity)
export(Environment)
export(Generic)
export(Household)
export(Individual)
export(MatchingMarket)
export(MatchingMarketOptimal)
export(MatchingMarketStochastic)
export(Model)
export(Network)
export(Pipeline)
export(Population)
export(SupportedTransitionModels)
export(Target)
export(Trans)
export(TransitionClassification)
export(TransitionRegression)
export(World)
export(Zone)
export(add_entity)
export(add_history)
export(add_log)
export(alignment)
export(assert_entity)
export(assert_entity_ids)
export(assert_required_models)
export(assert_subset2)
export(assert_target)
export(assert_transition_supported_model)
export(check_entity)
export(check_entity_ids)
export(check_module)
export(check_module_version)
export(check_required_models)
export(check_subset2)
export(check_target)
export(check_transition_supported_model)
export(combine_histories)
export(create_scenario)
export(create_toy_population)
export(create_toy_world)
export(dm_get_model)
export(dm_save)
export(download_module)
export(element_wise_expand_lists)
export(expect_entity)
export(expect_entity_ids)
export(expect_required_models)
export(expect_subset2)
export(expect_target)
export(expect_transition_supported_model)
export(extract_data)
export(get_active_scenario)
export(get_all_module_files)
export(get_history)
export(get_log)
export(get_models)
export(get_module_files)
export(get_module_versions)
export(get_modules)
export(get_supported_models)
export(get_transition)
export(inspect)
export(is_dymium_class)
export(is_scheduled)
export(lookup_and_replace)
export(lookup_and_replace2)
export(mutate_entity)
export(normalise_derived_vars)
export(omit_derived_varnames)
export(omit_derived_vars)
export(pick_models)
export(plot_history)
export(pop_register)
export(register)
export(sample_choice)
export(set_active_scenario)
export(simulate_choice)
export(test_entity)
export(test_entity_ids)
export(test_required_models)
export(test_subset2)
export(test_target)
export(test_transition_supported_model)
export(transition)
export(unnest_datatable)
export(use_event)
export(use_module)
export(use_module_readme)
export(validate_linkages)
import(R6)
import(data.table)
importFrom(checkmate,makeExpectation)
importFrom(checkmate,vname)
importFrom(cli,cli_alert_danger)
importFrom(cli,cli_alert_info)
importFrom(cli,cli_li)
importFrom(cli,cli_text)
importFrom(cli,rule)
importFrom(cli,symbol)
importFrom(fs,dir_create)
importFrom(fs,path)
importFrom(fs,path_ext)
importFrom(fs,path_ext_remove)
importFrom(fs,path_ext_set)
importFrom(furrr,future_map_dfr)
importFrom(furrr,future_options)
importFrom(glue,glue)
importFrom(glue,glue_col)
importFrom(glue,glue_collapse)
importFrom(here,here)
importFrom(lest,case_when)
importFrom(magrittr,"%>%")
importFrom(magrittr,freduce)
importFrom(magrittr,functions)
importFrom(magrittr,set_colnames)
importFrom(matchingR,galeShapley.collegeAdmissions)
importFrom(matchingR,galeShapley.marriageMarket)
importFrom(purrr,flatten_int)
importFrom(purrr,map)
importFrom(purrr,map2)
importFrom(purrr,map2_dfr)
importFrom(purrr,map2_int)
importFrom(purrr,map_lgl)
importFrom(purrr,walk)
importFrom(purrr,walk2)
importFrom(rlang,enexpr)
importFrom(usethis,use_directory)
importFrom(usethis,use_template)
importFrom(utils,download.file)
importFrom(utils,packageVersion)
